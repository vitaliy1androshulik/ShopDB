// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopDB;

#nullable disable

namespace ShopDB.Migrations
{
    [DbContext(typeof(ShopDBContext))]
    [Migration("20240220172040_AddAllElements")]
    partial class AddAllElements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("ShopDB.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Equipment"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sport-Food"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sport-inventory"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gadgets"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Household appliance"
                        });
                });

            modelBuilder.Entity("ShopDB.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 10,
                            Name = "Tokyo"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 10,
                            Name = "Warshava"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 10,
                            Name = "Krakow"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 10,
                            Name = "Katowice"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 10,
                            Name = "Warshava"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 4,
                            Name = "Parish"
                        });
                });

            modelBuilder.Entity("ShopDB.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 4,
                            Name = "France"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = 9,
                            Name = "China"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Egypt"
                        });
                });

            modelBuilder.Entity("ShopDB.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Worker"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Casier"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cleaner"
                        });
                });

            modelBuilder.Entity("ShopDB.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CetegoryId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsInStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CetegoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CetegoryId = 4,
                            Discount = 2,
                            IsInStock = true,
                            Name = "Gantela",
                            Price = 1200m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 2,
                            CetegoryId = 2,
                            Discount = 0,
                            IsInStock = true,
                            Name = "Apple",
                            Price = 50m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            CetegoryId = 2,
                            Discount = 0,
                            IsInStock = true,
                            Name = "Banana",
                            Price = 75m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 4,
                            CetegoryId = 4,
                            Discount = 15,
                            IsInStock = true,
                            Name = "Ball",
                            Price = 2500m,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 5,
                            CetegoryId = 5,
                            Discount = 1,
                            IsInStock = true,
                            Name = "SmartPhone Somsing B12",
                            Price = 9800m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("ShopDB.Entities.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Chinazes",
                            CityId = 2,
                            Name = "ATB",
                            ParkingArea = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Kyracha-12",
                            CityId = 1,
                            Name = "Borsch",
                            ParkingArea = 3
                        },
                        new
                        {
                            Id = 3,
                            Address = "Doctor-42B",
                            CityId = 2,
                            Name = "AntiSeptik",
                            ParkingArea = 2
                        });
                });

            modelBuilder.Entity("ShopDB.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "br@gmail.com",
                            Name = "Mukola",
                            PhoneNumber = "0987654321",
                            PositionId = 2,
                            Salary = 10000m,
                            ShopId = 1,
                            Surname = "Bondarenko"
                        },
                        new
                        {
                            Id = 2,
                            Email = "andriy@gmail.com",
                            Name = "Andriy",
                            PhoneNumber = "9786555252",
                            PositionId = 1,
                            Salary = 15000m,
                            ShopId = 2,
                            Surname = "Andriyenko"
                        },
                        new
                        {
                            Id = 3,
                            Email = "yarmolenko@gmail.com",
                            Name = "Sergiy",
                            PhoneNumber = "09873232321",
                            PositionId = 3,
                            Salary = 10000m,
                            ShopId = 2,
                            Surname = "Yarmolenko"
                        },
                        new
                        {
                            Id = 4,
                            Email = "waroslwkas@gmail.com",
                            Name = "Yaroslawa",
                            PhoneNumber = "1231231231",
                            PositionId = 3,
                            Salary = 10000m,
                            ShopId = 3,
                            Surname = "China"
                        });
                });

            modelBuilder.Entity("ProductShop", b =>
                {
                    b.HasOne("ShopDB.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDB.Entities.Shop", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopDB.Entities.City", b =>
                {
                    b.HasOne("ShopDB.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ShopDB.Entities.Product", b =>
                {
                    b.HasOne("ShopDB.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CetegoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ShopDB.Entities.Shop", b =>
                {
                    b.HasOne("ShopDB.Entities.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ShopDB.Entities.Worker", b =>
                {
                    b.HasOne("ShopDB.Entities.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopDB.Entities.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("ShopDB.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ShopDB.Entities.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("ShopDB.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("ShopDB.Entities.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("ShopDB.Entities.Shop", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
